-- 1 get all statuses, not repeating, alphabetically ordered

SELECT DISTINCT status FROM tasks ORDER BY status;


-- 2 get the count of all tasks in each project, order by tasks count descending

SELECT name, (SELECT COUNT(*) FROM tasks WHERE project_id = projects.id) tmp
FROM projects ORDER BY tmp DESC


-- 3 get the count of all tasks in each project, order by projects names

SELECT name, (SELECT COUNT(*) FROM tasks WHERE project_id = projects.id)
FROM projects ORDER BY name


-- 4 get the tasks for all projects having the name beginning with “N” letter

SELECT * FROM tasks WHERE name LIKE 'N%'


-- 5 get the list of all projects containing the ‘a’ letter in the middle of the name, and
-- show the tasks count near each project. Mention that there can exist projects without
-- tasks and tasks with project_id=NULL

SELECT name, (SELECT COUNT(*) FROM tasks WHERE project_id = task.id)
FROM projects AS task WHERE name LIKE '%a%'


-- 6  get the list of tasks with duplicate names. Order alphabetically

SELECT tasks.name, tasks.id FROM tasks
INNER JOIN (SELECT COUNT(tasks.id), tasks.name FROM tasks
            GROUP BY tasks.name HAVING COUNT(tasks.id) > 1 ) duplicate ON tasks.name = duplicate.name
            ORDER BY tasks.name


-- 7   get the list of tasks having several exact matches of both name and status, from
-- the project ‘Garage’. Order by matches count

SELECT tasks.name, COUNT(tasks.id) FROM
tasks INNER JOIN projects ON tasks.project_id = projects.id
WHERE projects.name = 'Garage'
GROUP BY tasks.name, tasks.status
HAVING COUNT(tasks.id) >1 ORDER BY COUNT(tasks.id)


-- 8 get the list of project names having more than 10 tasks in status ‘completed’. Order
-- by project_id

SELECT projects.name, COUNT(tasks.id) as count FROM projects
RIGHT JOIN tasks ON projects.id = tasks.project_id
WHERE tasks.status = 'completed'
GROUP BY projects.name HAVING count > 10
ORDER BY projects.id;